// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}




model User {
	id 		 Int      @id @default(autoincrement())
	email		String   @unique
	username	String   @unique
	password	String
	creationDate DateTime @default(now())
	updateDate	DateTime @updatedAt
	settings Json

	workspaces	userWorkspace[]
	teams		UserTeam[]
	projects	UserProject[]
	tasks		UserTask[]
	invitations	Invitation[]
}

model Workspace {
	id 		 Int      @id @default(autoincrement())
	name		String   @unique
	description	String
	creationDate DateTime @default(now())
	updateDate	DateTime @updatedAt
	settings Json	

	users		userWorkspace[]
	tasks		Task[]
	categories	Category[]
	projects	Project[]
	invitations	Invitation[]
}

model Task {
	id 		 Int      @id @default(autoincrement())
	name		String   @unique
	description	String
	creationDate DateTime @default(now())
	updateDate	DateTime @updatedAt
	idWorkspace Int
	workspace	Workspace @relation(fields: [idWorkspace], references: [id])

	users		UserTask[]
	categories	TaskCategory[]
	tasksProject		TaskProject[]
	tasksTeam		TaskTeam[]
}

model Category {
	id 		 Int      @id @default(autoincrement())
	name		String   @unique
	description	String
	creationDate DateTime @default(now())
	updateDate	DateTime @updatedAt
	idWorkspace Int
	workspace	Workspace @relation(fields: [idWorkspace], references: [id])

	tasks		TaskCategory[]
}

model Project {
	id 		 Int      @id @default(autoincrement())
	name		String   @unique
	description	String
	creationDate DateTime @default(now())
	updateDate	DateTime @updatedAt
	idWorkspace Int
	workspace	Workspace @relation(fields: [idWorkspace], references: [id])

	users		UserProject[]
	tasks		TaskProject[]
	teams		TeamProject[]
}

model Team {
	id 		 Int      @id @default(autoincrement())
	name		String   @unique
	description	String
	creationDate DateTime @default(now())
	updateDate	DateTime @updatedAt

	users		UserTeam[]
	tasks		TaskTeam[]
	projects	TeamProject[]
}

model Invitation {
	id 		 Int      @id @default(autoincrement())
	idWorkspace Int
	idUser		Int
	role		Int
	status		Int
	creationDate DateTime @default(now())
	updateDate	DateTime @updatedAt

	workspace	Workspace @relation(fields: [idWorkspace], references: [id])
	user		User @relation(fields: [idUser], references: [id])
}

model userWorkspace {
	id 		 Int      @id @default(autoincrement())
	idWorkspace Int
	workspace  Workspace @relation(fields: [idWorkspace], references: [id])
	idUser		Int
	user		User @relation(fields: [idUser], references: [id])
	role		Int
	settings	Json
}

model UserTeam {
	id 		 Int      @id @default(autoincrement())
	idTeam		Int
	team		Team @relation(fields: [idTeam], references: [id])
	idUser		Int
	user		User @relation(fields: [idUser], references: [id])
	role		Int
	settings	Json
}

model UserProject {
	id 		 Int      @id @default(autoincrement())
	idProject	Int
	project		Project @relation(fields: [idProject], references: [id])
	idUser		Int
	user		User @relation(fields: [idUser], references: [id])
	role		Int
	settings	Json
}

model UserTask {
	id 		 Int      @id @default(autoincrement())
	idTask		Int
	task		Task @relation(fields: [idTask], references: [id])
	idUser		Int
	user		User @relation(fields: [idUser], references: [id])
	role		Int
	settings	Json
}

model TaskCategory {
	id 		 Int      @id @default(autoincrement())
	idTask		Int
	task		Task @relation(fields: [idTask], references: [id])
	idCategory	Int
	category	Category @relation(fields: [idCategory], references: [id])

}

model TaskProject {
	id 		 Int      @id @default(autoincrement())
	idTask		Int
	task		Task @relation(fields: [idTask], references: [id])
	idProject	Int
	project		Project @relation(fields: [idProject], references: [id])
}

model TaskTeam {
	id 		 Int      @id @default(autoincrement())
	idTask		Int
	task		Task @relation(fields: [idTask], references: [id])
	idTeam		Int
	team		Team @relation(fields: [idTeam], references: [id])
}

model TeamProject {
	id 		 Int      @id @default(autoincrement())
	idTeam		Int
	team		Team @relation(fields: [idTeam], references: [id])
	idProject	Int
	project		Project @relation(fields: [idProject], references: [id])
}